from com.android.monkeyrunner import MonkeyRunner, MonkeyDevice, MonkeyImage
import commands
import sys
import random


#~/Desktop/adt-bundle-linux-x86_64-20130522/sdk/tools/monkeyrunner mymonkey.py


# starting script

print "Waiting for connection to Emulator."
# connection to the current device, and return a MonkeyDevice object
device = MonkeyRunner.waitForConnection(5000,"emulator-5554")


print "start"
choices =['Tap','Hold','HoldTwitch','SleepShort','SleepLong','WakeScreen','SwipeUp','SwipeDown','SwipeLeft','SwipeRight','TypeShort','TypeLong','TypeNumb', 'VolumeDown','VolumeUp','VolumeMute','Zoom','Pinch',]

#choices = filter(lambda x: random.randint(0,1) == 0, choices)
loop = 10
loopAcc = 4

count = 0

def checkstatus():
  check = device.takeSnapshot()	
	
	checkOrient = check.getSubImage((0,0,720,45))
	
	
	statbarH = MonkeyRunner.loadImageFromFile(path = './img/statusbar.png')
	if MonkeyImage.sameAs(checkOrient, statbarH,0.5):
		print "Our screen position is vertical"
		checknewtabV = check.getSubImage((28,78,200,45))
		checktabV = check.getSubImage((279,533,250,250))
		checkurlV = check.getSubImage((16,61,515,71))
		checkoptV = check.getSubImage((235,165,460,726))
		

		newtabV = MonkeyRunner.loadImageFromFile(path = './img/newtabV.png')
		if MonkeyImage.sameAs(checknewtabV, newtabV,0.5):
			print "Tabs are open(Vertical)"
		
		centerV = MonkeyRunner.loadImageFromFile(path = './img/centerV.png')
		if MonkeyImage.sameAs(checktabV, centerV,0.5):
			print "No Tabs Open (Vertical)"

		navV = MonkeyRunner.loadImageFromFile(path = './img/navV.png')
		if MonkeyImage.sameAs(checkurlV, navV, 0.5):
			print "Webpage is open (Vertical)"
	

	else:
		print "Our screen position is horizontal"

		newtab = check.getSubImage((610,28,35,150))
		newtabH = MonkeyRunner.loadImageFromFile(path = './img/newtabH.png')
		if MonkeyImage.sameAs(newtab, newtabH, 0.5):
			print "Tabs are open (Horizontal)"

		checkurlH = check.getSubImage((600,61,70,500))
		navH = MonkeyRunner.loadImageFromFile(path = './img/navH.png')
		if MonkeyImage.sameAs(checkurlH, navH, 0.5):
			print "Webpage is open (Horizontal)"
	
		checkcenter = check.getSubImage((214,517,150,150))
		centerH = MonkeyRunner.loadImageFromFile(path = './img/centerH.png')
		if MonkeyImage.sameAs(checkcenter, centerH, 0.5):
			print "No Tabs Open (Horizontal)"
	

def sameAs(device, i1, i2, perc):
  e = ne = 0
  for x in range(0, int(device.getProperty('display.width'))):
    for y in range(0, int(device.getProperty('display.height'))):
      #print 'x = %d, y = %d ' % (x,y) 
      if i1.getRawPixelInt(x,y) == i2.getRawPixelInt(x,y):
        e = e+1
      else:
        ne = ne+1

  print 'e = %d, ne = %d' % (e,ne)
  match = e * 100.0 / (ne + e)
  if match >= perc:
    return True
  else:
    return False


while (count < loop):
	countAcc = 0
	while (countAcc < loopAcc):
		MonkeyRunner.sleep(1)
		checkstatus()
		acc1 = random.choice(choices)
		print countAcc, acc1,
		countAcc = countAcc + 1	
		
		if countAcc == 4:
			print " "
			print "-------------------------------"
			count = count + 1
			print "Test: ",count
		
	#Taps & Holds
		if acc1 == 'Tap':
			Tx = random.randint(0,720)
			Ty = random.randint(0,1280)
			device.touch(Tx, Ty, 'DOWN_AND_UP')
			print "Tapping at:",Tx,",",Ty,
			MonkeyRunner.sleep(0.5)
			print " "
		

		if acc1 == 'Hold':
			Hx = random.randint(0,720)
			Hy = random.randint(0,1280)
			device.touch(Hx, Hy, 'DOWN')
			print "Holding at:",Hx,",",Hy,
			MonkeyRunner.sleep(0.5)
			print " "

		if acc1 == 'HoldTwitch':
			Htx = random.randint(0,720)
			Hty = random.randint(0,1280)
			Twx = random.randint(1,4)
			Twy = random.randint(1,4)
			print "Holding at", device.drag((Htx, Hty), (Twx, Twy), 2, 12)
			MonkeyRunner.sleep(0.5)
			print " "
	
	#Sleeps
		if acc1 == 'SleepShort':
			SleepS = random.randint(1,2)
			print 'Sleeping a short time for:',SleepS
			MonkeyRunner.sleep(0.5)
			print " "
			MonkeyRunner.sleep(SleepS)


		if acc1 == 'SleepLong':
			SleepL = random.randint(5,7)
			print 'Pausing for a long time for:',SleepL
			MonkeyRunner.sleep(0.5)
			MonkeyRunner.sleep(SleepL)


	#Waking Screen		
		if acc1 == 'WakeScreen':
			print 'Waking the screen!'
			device.wake


		#Swiping
		if acc1 == 'SwipeUp':
			SUx = random.randint(0,720)
			SUy = random.randint(0,1280)
			device.drag((SUx,SUy),(SUx,SUy+300),3, 20)
			print 'Swiping up from:', SUx, ',', SUy,
			print " " 

		if acc1 == 'SwipeDown':
			SDx = random.randint(0,720)
			SDy = random.randint(0,1280)
			device.drag((SDx,SDy),(SDx,SDy-300),3, 20)
			print 'Swiping down from', SDx, ',', SDy,
			MonkeyRunner.sleep(0.5)
			print " "

		if acc1 == 'SwipeLeft':
			SLx = random.randint(0,720)
			SLy = random.randint(0,1280)
			device.drag((SLx,SLy),(SLx+200,SLy),3, 20)
			print 'Swiping left from', SLx, ',', SLy,
			MonkeyRunner.sleep(0.5)
			print " "

		if acc1 == 'SwipeRight':
			SRx = random.randint(0,720)
			SRy = random.randint(0,1280)
			device.drag((SRx,SRy),(SRx-200,SRy-300),3, 20)
			print 'Dragging left from', SRx, ',', SRy,
			MonkeyRunner.sleep(0.5)
			print " "


	#Typing Random Stuff
		if acc1 == 'TypeShort':
			print " "
			countAcc = 0
			loopAcc = 5
			letters =['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
			while (countAcc < loopAcc):
				device.type(random.choice(letters))
				countAcc = countAcc + 1


		if acc1 == 'TypeLong':
			letters =['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
			countAL = 0	
			loopAL = 15
			while (countAL < loopAL):	
				device.type(random.choice(letters))
				countAL = countAL + 1

		if acc1 == 'TypeNumb':
			print " "
			numbs =['0','1','2','3','4','5','6','7','8','9']
			countN = 0
			loopN = 5
			while ( countN < loopN):
				device.type(random.choice(numbs))
				countN = countN + 1

	#Changing Volume
		if acc1 == 'VolumeDown':
			print " "
			device.press('KEYCODE_VOLUME_DOWN')

		if acc1 == 'VolumeUp':
			print " "
			device.press('KEYCODE_VOLUME_UP')

		if acc1 == 'VolumeMute':
			print " "
			device.press('KEYCODE_VOLUME_MUTE')

	#Pinching and Zooming
		if acc1 == 'Zoom':
			Zx = random.randint(250,520)
			Zy = random.randint(250,1080)
			device.touch(Zx,Zy, 'DOWN_AND_UP')
			device.drag((Zx,Zy),(Zx+200,Zy),0.25, 20)
			print 'Zooming in on', Zx, ',', Zy,
			MonkeyRunner.sleep(0.5)
			print " "
		
		if acc1 == 'Pinch':
			Px = random.randint(250,520)
			Py = random.randint(250,1080)
			device.touch(Px,Py, 'DOWN_AND_UP')
			device.drag((Px+100,Py+100),(Px,Py),0.25,20)
			print 'Zooming out on', Px, ',', Py,
			MonkeyRunner.sleep(0.5)
			print " "



print "end"
